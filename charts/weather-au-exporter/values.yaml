---
weather:
  # -- Location to query weather for. Must be set, should be a "City,Province/State", ie: "Sydney,NSW"
  location: ""
  # -- OpenWeatherMap API key, not advised
  apiKey: ""
  # -- Optional sealed secret for API key, can be set if you run the SealedSecrets controller 
  sealedApiKey: "" 

podAnnotations:
  {}
  # prometheus.io/scrape: "true"
  # prometheus.io/port: "8080"
  # prometheus.io/path: "/metrics"

readinessProbe:
  httpGet:
    path: /metrics
    port: 5000

livenessProbe:
  httpGet:
    path: /metrics
    port: 5000
  initialDelaySeconds: 30
  failureThreshold: 10
  timeoutSeconds: 10

image:
  repository: ghcr.io/seanson/weather-au-exporter
  tag: latest
  pullPolicy: Always

service:
  enabled: true
  type: ClusterIP
  ## Provide optional annotations to the service i.e. for external-dns
  # annotations:
  ##   external-dns.alpha.kubernetes.io/hostname: yourservicename.k8s.yourcompany.com
  ##
  port: 80
  targetport: 5000

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
  annotations: {}

resources:
  {}
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

# Enable if using PrometheusOperator
serviceMonitor:
  enabled: false
  interval: 30s
  scrapeTimeout: 10s
  path: /metrics

nodeSelector: {}

tolerations: []

affinity: {}
